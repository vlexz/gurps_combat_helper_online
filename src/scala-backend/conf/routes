# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
#GET           /                    controllers.Application.index

# Map static resources from the /public folder to the /assets URL path
#GET           /assets/*file        controllers.Assets.at(path="/public", file)

# Traits storage
OPTIONS        /api/trait                          controllers.TraitController.options(p = "base", id = "")
POST           /api/trait                          controllers.TraitController.add()
GET            /api/trait                          controllers.TraitController.create
OPTIONS        /api/traits                         controllers.TraitController.options(p = "list", id = "")
GET            /api/traits                         controllers.TraitController.list
OPTIONS        /api/traits/search/:category        controllers.TraitController.options(p = "elem", category)
GET            /api/traits/search/:category        controllers.TraitController.lookup(category, term)
OPTIONS        /api/trait/:id                      controllers.TraitController.options(p = "elem", id)
GET            /api/trait/:id                      controllers.TraitController.get(id)
# Skills storage
OPTIONS        /api/skill                          controllers.SkillController.options(p = "base", id = "")
POST           /api/skill                          controllers.SkillController.add()
GET            /api/skill                          controllers.SkillController.create
OPTIONS        /api/skills                         controllers.SkillController.options(p = "list", id = "")
GET            /api/skills                         controllers.SkillController.list
OPTIONS        /api/skills/search/                 controllers.SkillController.options(p = "elem", id = "")
GET            /api/skills/search/                 controllers.SkillController.lookup(term)
OPTIONS        /api/skill/:id                      controllers.SkillController.options(p = "elem", id)
GET            /api/skill/:id                      controllers.SkillController.get(id)
# Charlists components storage
OPTIONS        /api/teq                            controllers.CharlistController.options(p = "base", id = "")
GET            /api/teq                            controllers.CharlistController.create(p = "teq")
OPTIONS        /api/weap                           controllers.CharlistController.options(p = "base", id = "")
GET            /api/weap                           controllers.CharlistController.create(p = "weap")
OPTIONS        /api/armor                          controllers.CharlistController.options(p = "base", id = "")
GET            /api/armor                          controllers.CharlistController.create(p = "armor")
OPTIONS        /api/item                           controllers.CharlistController.options(p = "base", id = "")
GET            /api/item                           controllers.CharlistController.create(p = "item")
# Charlist storage
OPTIONS        /api/char                           controllers.CharlistController.options(p = "base", id = "")
POST           /api/char                           controllers.CharlistController.add()
GET            /api/char                           controllers.CharlistController.create(p = "")
OPTIONS        /api/chars                          controllers.CharlistController.options(p = "list", id = "")
GET            /api/chars                          controllers.CharlistController.list
OPTIONS        /api/char/:id                       controllers.CharlistController.options(p = "elem", id)
GET            /api/char/:id                       controllers.CharlistController.get(id)
PUT            /api/char/:id                       controllers.CharlistController.update(id, replace: Boolean = true)
PATCH          /api/char/:id                       controllers.CharlistController.update(id, replace: Boolean = false)
DELETE         /api/char/:id                       controllers.CharlistController.delete(id)
OPTIONS        /api/char/:id/pic                   controllers.CharlistController.options(p = "file", id)
GET            /api/char/:id/pic                   controllers.CharlistController.getPic(id)
PUT            /api/char/:id/pic                   controllers.CharlistController.storePic(id)